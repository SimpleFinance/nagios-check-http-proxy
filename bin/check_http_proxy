#!/bin/bash
#!/usr/bin/env bash

NAME="check_http_proxy"
VERSION="1.2"

EXIT_NAGIOS_OK=0
EXIT_NAGIOS_WARN=1
EXIT_NAGIOS_CRITICAL=2

function version() {
    echo "${NAME}: ${VERSION}"
}

function usage() {
    cat <<EOF
Usage: $check_http_proxy [OPTIONS] [-S] -P PROXY -H HOST [-p PORT] [-u URL]

Options:
  -u URL             URL in protocol://domain:[port]/path format. 

  -P PROXY           proxy url in hostname:port format

  -n TRIES           number of times to try [default: 1]
  -t TIMEOUT         amount of time to wait for a connection in seconds [default: 30]
EOF
}

proxy=""
url=""
times=1
timeout=30

while getopts "hv:Su:P:n:t:" opt; do
    case $opt in
        h)
            usage
            exit 0
            ;;
        v)
            version
            exit 0;
            ;;
        S)
            ssl=1
            ;;
        u)
            url=$OPTARG
            ;;
        P)
            proxy=$OPTARG
            ;;
        n)
            times=$OPTARG
            ;;
        t)
            timeout=$OPTARG
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
    esac
done

if [[ $(echo ${proxy} | grep "^[-.a-zA-Z0-9]*:\d*$") == "" ]]; then
    echo "Error: Proxy must be present and in hostname:port format."
    usage
    exit 11
fi

if [ -z "$url" ]; then
    echo "Error: URL is required"
    usage
    exit 11
fi

protocol=$(echo ${url} | sed 's/\:.*$//' | awk '{print tolower($0)}')

if [ "$protocol" != "http" ] && [ "$protocol" != "https" ]; then
    echo "Error: Only HTTP and HTTPS protocols supported."
    usage
    exit 11
fi

proxy_cmd="${protocol}_proxy=${proxy}"

start=$(date +'%s')
wget -t $times --timeout $timeout -O /dev/null -o /dev/null -e $proxy_cmd $url
status=$?
end=$(date +'%s')

if [ $status -eq 0 ] ; then
  echo "${protocol} OK: $((end - start))s - ${url} "
  exit $EXIT_NAGIOS_OK
elif [ $status -eq 4 ] ; then
  echo "${protocol} CRITICAL: (Proxy Not Available) $((end - start))s - ${url}"
  exit $EXIT_NAGIOS_CRITICAL
elif [ $status -eq 8 ] ; then
  echo "${protocol} CRITICAL: (Requested Website Not Available) - $((end - start))s - ${url}"
else
  echo "${protocol} CRITICAL: (Unexpected Error) $((end - start))s - ${url} "
  exit $EXIT_NAGIOS_CRITICAL
fi
